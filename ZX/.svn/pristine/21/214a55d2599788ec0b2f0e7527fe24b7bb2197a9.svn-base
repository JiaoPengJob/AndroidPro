package com.tch.zx.activity.mine;

import android.content.Intent;
import android.database.Cursor;
import android.graphics.Bitmap;
import android.graphics.BitmapFactory;
import android.net.Uri;
import android.os.Build;
import android.preference.PreferenceManager;
import android.provider.MediaStore;
import android.support.v7.app.AppCompatActivity;
import android.os.Bundle;
import android.view.Gravity;
import android.view.View;
import android.view.Window;
import android.view.WindowManager;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.PopupWindow;
import android.widget.Toast;

import com.tch.zx.R;
import com.tch.zx.activity.BaseActivity;
import com.tch.zx.view.DynamicPhotoPopupWindow;

import butterknife.BindView;
import butterknife.ButterKnife;
import butterknife.OnClick;

/**
 * 公司详情
 */
public class CompanyDetailsActivity extends BaseActivity {

    /**
     * 父布局
     */
    @BindView(R.id.ll_parent_company_details)
    LinearLayout ll_parent_company_details;
    /**
     * 公司Logo图片展示
     */
    @BindView(R.id.iv_upload_company_logo)
    ImageView iv_upload_company_logo;

    /**
     * 设置popupwindow的布局参数
     */
    private WindowManager.LayoutParams params;

    private int clickType = 0;

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        //去除标题栏,两种方式
        requestWindowFeature(Window.FEATURE_NO_TITLE);
        if (getSupportActionBar() != null) {
            getSupportActionBar().hide();
        }
        setContentView(R.layout.activity_company_details);
        ButterKnife.bind(this);
    }

    /**
     * 选择图片
     */
    @OnClick({R.id.rl_choose_upload_photo, R.id.rl_choose_upload_video})
    public void chooseUploadPhoto(View view) {

        final DynamicPhotoPopupWindow rewardPopupWindow = new DynamicPhotoPopupWindow(this);
        //设置Popupwindow显示位置（从底部弹出）
        rewardPopupWindow.showAtLocation(ll_parent_company_details, Gravity.BOTTOM | Gravity.CENTER_HORIZONTAL, 0, 0);
        params = getWindow().getAttributes();
        //当弹出Popupwindow时，背景变半透明
        params.alpha = 0.7f;
        getWindow().setAttributes(params);
        //设置Popupwindow关闭监听，当Popupwindow关闭，背景恢复1f
        rewardPopupWindow.setOnDismissListener(new PopupWindow.OnDismissListener() {
            @Override
            public void onDismiss() {
                params = getWindow().getAttributes();
                params.alpha = 1f;
                getWindow().setAttributes(params);
            }
        });

        rewardPopupWindow.getTv_popup_take_photo().setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View view) {
                Intent intent1 = new Intent(MediaStore.ACTION_IMAGE_CAPTURE);
                // 启动相机
                startActivityForResult(intent1, 50);
                rewardPopupWindow.dismiss();
            }
        });

        rewardPopupWindow.getTv_popup_choose_photo().setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View view) {
                Intent intent = new Intent(Intent.ACTION_PICK, MediaStore.Images.Media.EXTERNAL_CONTENT_URI);
                startActivityForResult(intent, 51);
            }
        });
    }

    /**
     * 保存
     */
    @OnClick(R.id.tv_save_company_details)
    public void saveCompanyDetails() {

    }

    /**
     * 返回
     */
    @OnClick(R.id.ll_return_company_details)
    public void returnCompanyDetails() {
        this.finish();
    }

    @Override
    protected void onActivityResult(int requestCode, int resultCode, Intent data) {
        super.onActivityResult(requestCode, resultCode, data);
        if (resultCode == RESULT_OK) {
            switch (requestCode) {
                case 50:
                    //通过这种方法取出的拍摄会默认压缩，因为如果相机的像素比较高拍摄出来的图会比较高清，
                    //如果图太大会造成内存溢出（OOM），因此此种方法会默认给图片尽心压缩
                    Bundle bundle = data.getExtras();
                    Bitmap bitmap = (Bitmap) bundle.get("data");
                    iv_upload_company_logo.setImageBitmap(bitmap);
                    break;
                case 51:
                    Uri uri = data.getData();
                    Cursor cursor = getContentResolver().query(uri, null, null, null, null);
                    if (cursor != null && cursor.moveToFirst()) {
                        String path = cursor.getString(cursor.getColumnIndexOrThrow(MediaStore.Images.Media.DATA));
                        Bitmap bm = BitmapFactory.decodeFile(path);
                        iv_upload_company_logo.setImageBitmap(bm);
                    }
                    break;
            }
        }
    }
}
