package com.tch.zx.dao.green;

import java.util.Map;

import org.greenrobot.greendao.AbstractDao;
import org.greenrobot.greendao.AbstractDaoSession;
import org.greenrobot.greendao.database.Database;
import org.greenrobot.greendao.identityscope.IdentityScopeType;
import org.greenrobot.greendao.internal.DaoConfig;

import com.tch.zx.dao.green.LiveBean;
import com.tch.zx.dao.green.SearchHistoryBean;
import com.tch.zx.dao.green.SmallBean;
import com.tch.zx.dao.green.SpecialBean;
import com.tch.zx.dao.green.TabBar;
import com.tch.zx.dao.green.UserBean;

import com.tch.zx.dao.green.LiveBeanDao;
import com.tch.zx.dao.green.SearchHistoryBeanDao;
import com.tch.zx.dao.green.SmallBeanDao;
import com.tch.zx.dao.green.SpecialBeanDao;
import com.tch.zx.dao.green.TabBarDao;
import com.tch.zx.dao.green.UserBeanDao;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.

/**
 * {@inheritDoc}
 * 
 * @see org.greenrobot.greendao.AbstractDaoSession
 */
public class DaoSession extends AbstractDaoSession {

    private final DaoConfig liveBeanDaoConfig;
    private final DaoConfig searchHistoryBeanDaoConfig;
    private final DaoConfig smallBeanDaoConfig;
    private final DaoConfig specialBeanDaoConfig;
    private final DaoConfig tabBarDaoConfig;
    private final DaoConfig userBeanDaoConfig;

    private final LiveBeanDao liveBeanDao;
    private final SearchHistoryBeanDao searchHistoryBeanDao;
    private final SmallBeanDao smallBeanDao;
    private final SpecialBeanDao specialBeanDao;
    private final TabBarDao tabBarDao;
    private final UserBeanDao userBeanDao;

    public DaoSession(Database db, IdentityScopeType type, Map<Class<? extends AbstractDao<?, ?>>, DaoConfig>
            daoConfigMap) {
        super(db);

        liveBeanDaoConfig = daoConfigMap.get(LiveBeanDao.class).clone();
        liveBeanDaoConfig.initIdentityScope(type);

        searchHistoryBeanDaoConfig = daoConfigMap.get(SearchHistoryBeanDao.class).clone();
        searchHistoryBeanDaoConfig.initIdentityScope(type);

        smallBeanDaoConfig = daoConfigMap.get(SmallBeanDao.class).clone();
        smallBeanDaoConfig.initIdentityScope(type);

        specialBeanDaoConfig = daoConfigMap.get(SpecialBeanDao.class).clone();
        specialBeanDaoConfig.initIdentityScope(type);

        tabBarDaoConfig = daoConfigMap.get(TabBarDao.class).clone();
        tabBarDaoConfig.initIdentityScope(type);

        userBeanDaoConfig = daoConfigMap.get(UserBeanDao.class).clone();
        userBeanDaoConfig.initIdentityScope(type);

        liveBeanDao = new LiveBeanDao(liveBeanDaoConfig, this);
        searchHistoryBeanDao = new SearchHistoryBeanDao(searchHistoryBeanDaoConfig, this);
        smallBeanDao = new SmallBeanDao(smallBeanDaoConfig, this);
        specialBeanDao = new SpecialBeanDao(specialBeanDaoConfig, this);
        tabBarDao = new TabBarDao(tabBarDaoConfig, this);
        userBeanDao = new UserBeanDao(userBeanDaoConfig, this);

        registerDao(LiveBean.class, liveBeanDao);
        registerDao(SearchHistoryBean.class, searchHistoryBeanDao);
        registerDao(SmallBean.class, smallBeanDao);
        registerDao(SpecialBean.class, specialBeanDao);
        registerDao(TabBar.class, tabBarDao);
        registerDao(UserBean.class, userBeanDao);
    }
    
    public void clear() {
        liveBeanDaoConfig.clearIdentityScope();
        searchHistoryBeanDaoConfig.clearIdentityScope();
        smallBeanDaoConfig.clearIdentityScope();
        specialBeanDaoConfig.clearIdentityScope();
        tabBarDaoConfig.clearIdentityScope();
        userBeanDaoConfig.clearIdentityScope();
    }

    public LiveBeanDao getLiveBeanDao() {
        return liveBeanDao;
    }

    public SearchHistoryBeanDao getSearchHistoryBeanDao() {
        return searchHistoryBeanDao;
    }

    public SmallBeanDao getSmallBeanDao() {
        return smallBeanDao;
    }

    public SpecialBeanDao getSpecialBeanDao() {
        return specialBeanDao;
    }

    public TabBarDao getTabBarDao() {
        return tabBarDao;
    }

    public UserBeanDao getUserBeanDao() {
        return userBeanDao;
    }

}
